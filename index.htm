<!DOCTYPE html>
<html>
    <head>
        <title>Easy Home Automation</title>
        <script>
		strLED1 = "";
		strLED2 = "";
		strLED3 = "";
		strLED4 = "";
		var LED3_state = 0;
		var LED4_state = 0;
		function GetArduinoIO()
		{
			nocache = "&nocache=" + Math.random() * 1000000;
			var request = new XMLHttpRequest();
			request.onreadystatechange = function()
			{
				if (this.readyState == 4) {
					if (this.status == 200) {
						if (this.responseXML != null) {
							// XML file received : analog values, switch values & LED states
							var count;
							// get analog inputs
							var num_an = this.responseXML.getElementsByTagName('analog').length;
							for (count = 0; count < num_an; count++) {
								document.getElementsByClassName("analog")[count].innerHTML =
									this.responseXML.getElementsByTagName('analog')[count].childNodes[0].nodeValue;
							}
							// get switch inputs
							var num_an = this.responseXML.getElementsByTagName('switch').length;
							for (count = 0; count < num_an; count++) {
								document.getElementsByClassName("switches")[count].innerHTML =
									this.responseXML.getElementsByTagName('switch')[count].childNodes[0].nodeValue;
							}
							// LED 1
							if (this.responseXML.getElementsByTagName('LED')[0].childNodes[0].nodeValue === "checked") {
								document.LED_form.LED1.checked = true;
							}
							else {
								document.LED_form.LED1.checked = false;
							}
							// LED 2
							if (this.responseXML.getElementsByTagName('LED')[1].childNodes[0].nodeValue === "checked") {
								document.LED_form.LED2.checked = true;
							}
							else {
								document.LED_form.LED2.checked = false;
							}
							// LED 3
							if (this.responseXML.getElementsByTagName('LED')[2].childNodes[0].nodeValue === "on") {
								document.LED_form.LED3.checked = true;
							}
							else {
								document.LED_form.LED3.checked = false;
							}
							// LED 4
							if (this.responseXML.getElementsByTagName('LED')[3].childNodes[0].nodeValue === "on") {
								document.LED_form.LED4.checked = true;
							}
							else {
								document.LED_form.LED4.checked = false;
							}
						}
					}
				}
			}
			// send HTTP GET request with LEDs to switch on/off (kalau ada)
			request.open("GET", "ajax_inputs" + strLED1 + strLED2 + strLED3 + strLED4 + nocache, true);
			request.send(null);
			setTimeout('GetArduinoIO()', 500);
			strLED1 = "";
			strLED2 = "";
			strLED3 = "";
			strLED4 = "";
		}
		// service LEDs when checkbox checked/unchecked
		function GetCheck()
		{
			if (LED_form.LED1.checked) {
				strLED1 = "&LED1=1";
			}
			else {
				strLED1 = "&LED1=0";
			}
			if (LED_form.LED2.checked) {
				strLED2 = "&LED2=1";
			}
			else {
				strLED2 = "&LED2=0";
			}
			/*if (LED_form.LED3.checked) {
				strLED3 = "&LED3=1";
			}
			else {
				strLED3 = "&LED3=0";
			}
			if (LED_form.LED4.checked) {
				strLED4 = "&LED4=1";
			}
			else {
				strLED4 = "&LED4=0";
			}*/
		}
		
		function GetButton1()
		{
			if (LED3_state === 1) {
				LED3_state = 0;
				strLED3 = "&LED3=0";
			}
			else {
				LED3_state = 1;
				strLED3 = "&LED3=1";
			}
		}
		function GetButton2()
		{
			if (LED4_state === 1) {
				LED4_state = 0;
				strLED4 = "&LED4=0";
			}
			else {
				LED4_state = 1;
				strLED4 = "&LED4=1";
			}
		}
	</script>
	<style>
		.IO_box {
			float: left;
			margin: 1.5vw;
			border: 1px solid blue;
			padding: 0 5px 0 5px;
			width: 15vw;
			min-width : 200px;
		}
		h1 {
			font-size: 140%;
			color: blue;
			margin: 0 0 10px 0;
		}
		h2 {
			font-size: 100%;
			color: #5734E6;
			margin: 5px 0 5px 0;
		}
		p, form, button {
			font-size: 90%;
			color: #252525;
		}
		.small_text {
			font-size: 80%;
			color: #737373;
		}
	
@media (min-width : 20cm) {
	body{
		font-size : 3.5vh;
	}
}
@media (max-width : 20cm) {
	body{
		font-size : 4vw;
	}
}

body{
	text-align : center;
}

.IO_box {
	display : none;
}
[asd]{
	display : none;
}
[asd] + label {
	display : inline-block;
	margin : 0;
	width : 2.5em;
	height : 1.5em;
	border-radius : 1.5em;
	transition : 0.25s;
	-moz-transition : 0.25s;
	-webkit-transition : 0.25s;
}
[asd]:checked + label {
	background-color : #2ecc71;
}
[asd]:not(:checked) + label {
	background-color : #bdc3c7;
}
[asd] + label::before {
	content : '';
	margin : 0;
	display : inline-block;
	width : 1em;
	height : 1em;
	margin-top : 0.25em;
	background-color : #fff;
	border-radius : 1em;
	transition : 0.25s;
	-moz-transition : 0.25s;
	-webkit-transition : 0.25s;
}

[asd]:not(:checked) + label::before {
	margin-left : 0.25em;
}
[asd]:checked + label::before {
	margin-left : 1.25em;
}

[asd]:checked ~ [on],
[asd]:not(:checked) ~ [off] {
	display : block;
}
[asd]:checked ~ [off],
[asd]:not(:checked) ~ [on] {
	display : none;
}


body {
	background-color : #99A5B4;
	font-family : roboto,sans serif;
}
/*body::after{
	content : 'Designed by Alivanz';
	display : block;
	font-size : 1em;
}*/

ul[panel] {
	display : inline-block;
	background-color : #ebebeb;
	padding : 0;
	border-radius : 0.25em;
	width : 20em;
	box-shadow : 0 0 0.25em #333;
	text-align : left;
}
	ul[panel] > h1{
		padding : 0.5em;
		color : #aaa;
		text-align : center;
		padding : 1em;
		font-size : 1em;
		margin : 0;
		background-color : #ccc;
		background-image : linear-gradient(top,#555,#333);
		background-image : -moz-linear-gradient(top,#555,#333);
		background-image : -webkit-linear-gradient(top,#555,#333);
		border-radius : 0.25em 0.25em 0 0;
	}
	ul[panel] > h2{
		padding : 0.5em;
		color : #777;
		text-align : center;
		font-size : 0.75em;
		border-top : 0.1em solid #ccc;
		margin : 0;
	}
	ul[panel] > li, ul[panel] > * > li{
		display : block;
		padding : 0.75em;
		border-top : 0.1em solid #ccc;
	}
		ul[panel] > li > h1, ul[panel] > * > li > h1,
		ul[panel] > li > p, ul[panel] > * > li > p{
			font-size : 0.75em;
			margin : 0;
		}
		ul[panel] > li > h1, ul[panel] > * > li > h1{
			color : #333;
		}
		ul[panel] > li > p, ul[panel] > * > li > p{
			color : #777;
		}
		ul[panel] > li > label, ul[panel] > * > li > label{
			float : right;
		}

	</style>
    </head>
    <body onload="GetArduinoIO()">
        <div class="IO_box">
			<h2>Analog Inputs</h2>
			<p class="small_text">A0 used by Ethernet shield</p>
			<p class="small_text">A1 used by Ethernet shield</p>
			<p>A2: <span class="analog">...</span></p>
			<p>A3: <span class="analog">...</span></p>
			<p>A4: <span class="analog">...</span></p>
			<p>A5: <span class="analog">...</span></p>
		</div>
		<div class="IO_box">
			<h2>Switch Inputs</h2>
			<p class="small_text">D0: used by serial RX</p>
			<p class="small_text">D1: used by serial TX</p>
			<p>Switch 1 (D2): <span class="switches">...</span></p>
			<p>Switch 2 (D3): <span class="switches">...</span></p>
			<p class="small_text">D4: used by Ethernet shield</p>
			<p>Switch 3 (D5): <span class="switches">...</span></p>
		</div>
		<!--
		<div class="IO_box">
			<h2>LEDs Using Buttons</h2>
			<button type="button" id="LED3" onclick="GetButton1()">LED 3 is OFF (D8)</button><br /><br />
			<button type="button" id="LED4" onclick="GetButton2()">LED 4 is OFF (D9)</button><br /><br />
			<p class="small_text">D10 to D13 used by Ethernet shield</p>
		</div>
		-->
		<!--<div class="IO_box">
			<h2>LEDs Using Checkboxes</h2>
			<form id="check_LEDs" name="LED_form">
				<input type="checkbox" name="LED1" value="0" onclick="GetCheck()" />LED 1 (D6)<br /><br />
				<input asd type="checkbox" id="asd"><label for="asd"></label>
				<input type="checkbox" name="LED2" value="0" onclick="GetCheck()" />LED 2 (D7)<br /><br />
			</form>
		</div>-->
		
		<form id="check_LEDs" name="LED_form">
		<ul panel>
			<h1>Easy Home Automation</h1>
			<h2>LAMP</h2>
			<li>
				<input asd type="checkbox" id="d6" name="LED1" onchange="GetCheck()"><label for="d6"></label>
				<h1>Lamp 1</h1>
				<p>LED D6</p>
			</li>
			<li>
				<input asd type="checkbox" id="d7" name="LED2" onchange="GetCheck()"><label for="d7"></label>
				<h1>Lamp 2</h1>
				<p>LED D7</p>
			</li>
			<h2>DOOR</h2>
			<li>
				<input asd type="checkbox" id="LED3" name="LED3" onchange="GetButton1()"><label for="LED3"></label>
				<h1>Door</h1>
				<p on>Locked</p>
				<p off>Unlocked</p>
			</li>
			<li>
				<input asd type="checkbox" id="LED4" name="LED4" onchange="GetButton2()"><label for="LED4"></label>
				<h1>Garage</h1>
				<p on>Locked</p>
				<p off>Unlocked</p>
			</li>
		</ul>
		</form>
		
    </body>
</html>

